import asyncio
import logging
import time

from aiogram import Bot, Dispatcher, types
from aiogram.filters.command import Command
from datetime import datetime

dp = Dispatcher()
logging.basicConfig(level=logging.INFO)

HELP_COMMAND = """
/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥
/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/gimme - –û—Ç–ø—Ä–∞–≤–∞–ª—è–µ—Ç –∫—Ä–∞—Å–∏–≤—ã–π —Å—Ç–∏–∫–µ—Ä
/count - —Å—á–∏—Ç–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å–≤—Ç–æ –≤—ã–∑—ã–≤–æ–≤ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π
/dice - –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —ç–º–æ–¥–∑–∏(–∫—É–±–∏–∫)
/info - –≤—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
/reply_heart - 
"""
count = 0
dp["started_at"] = datetime.now().strftime("%Y-%m-%d %H:%M")


@dp.message(Command("info"))
async def cmd_info(message: types.Message, started_at: str):
    await message.answer(f"–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω {started_at}")


@dp.message(Command("gimme"))
async def sticker_give(message: types.Message, bot=None):
    for i in range(1, 5, 1):
        await bot.send_sticker(message.from_user.id,
                               sticker="CAACAgIAAxkBAAELRjNlt5ArSlWlQu5GWsRqV2dx3m8PLAACwhcAAmsgUEjKrGkqZXjZETQE")


@dp.message(Command("dice"))
async def cmd_dice(message: types.Message):
    await message.answer_dice(emoji="üé≤")


@dp.message(Command("count"))
async def check_count(message: types.Message):
    global count
    await message.answer(f'COUNT: {count}')
    count += 1


@dp.message(Command("help"))
async def help_command(message: types.Message):
    await message.reply(text=HELP_COMMAND)


@dp.message(Command("start"))
async def help_command(message: types.Message):
    await message.delete()
    await message.answer("<em>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ–≥–æ <b>–±–æ—Ç—è—Ä—É!</b></em>", parse_mode="HTML")


@dp.message(Command("reply_heart"))
async def reply_heart(message: types.Message, string=None):
    a = input(string("–ù–∞–ø–∏—à–∏ —á—Ç–æ-—Ç–æ"))
    await message.reply(a + "‚ù§Ô∏è")


@dp.message()
async def echo_upper(message: types.Message):
    if message.text.count(' ') >= 1:
        await message.answer(text=message.text.upper())
    else:
        await message.answer(text=message.text.capitalize())


async def start_bot(bot: Bot):
    await bot.send_message(1026131979, text='–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!')


async def stop_bot(bot: Bot):
    await bot.send_message(1026131979, text='–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!')


async def main():
    bot = Bot(token="6914705938:AAEv4_7-6VoXhJGVGYSqLxJcm50XJliSrww")

    dp.startup.register(start_bot)
    dp.shutdown.register(stop_bot)

    try:
        await dp.start_polling(bot)
    finally:
        await bot.session.close()


if __name__ == "__main__":
    asyncio.run(main())
